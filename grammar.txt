S -> CODE
CODE -> CODE NEWLINE CODE | NEWLINE CODE | CODE NEWLINE | IF_CODE | LOOP_CODE | CLASS_CODE | DEF_CODE | PASS | VAR | CONST | NONE


//if thing
IF_CODE -> IF_HEAD CODE | IF_CODE ELIF_CODE | IF_CODE ELSE_CODE
IF_HEAD -> IF CONDITION COLON NEWLINE
ELIF_CODE -> ELIF_HEAD CODE | ELIF_CODE ELIF_CODE | ELIF_CODE ELSE_CODE
ELIF_HEAD -> ELIF CONDITION COLON NEWLINE
ELSE_CODE -> ELSE_HEAD CODE
ELSE_HEAD -> ELSE COLON NEWLINE


//conditional operations
CONDITION -> BRACKET_OPEN CONDITION_OPERATION BRACKET_CLOSE | CONDITION_OPERAND CONDITION_OPERATOR CONDITION_OPERATION | CONDITION_OPERAND
CONDITION_OPERATOR -> GT | LT | EQ | GTE | LTE | EQEQ | NOTEQ | AND | OR | NOT
CONDITION_OPERAND -> NOT CONDITION_OPERAND | VARIABLE | CONST | BRACKET_OPEN CONDITION_OPERAND BRACKET_CLOSE | NONE | TRUE | FALSE

//misc
NEWLINE -> @
COLON -> :
VARIABLE -> ^
CONST -> ~
BRACKET_OPEN -> (
BRACKET_CLOSE -> )

IF -> a
CLASS -> b
FALSE -> c
TRUE -> d
IS -> e
RETURN -> f
NONE -> g
CONTINUE -> h
FOR -> i
DEF -> j
FROM -> k
WHILE -> n
WITH -> m
AS -> o
ELIF -> p
ELSE -> q
IMPORT -> r
PASS -> s
BREAK -> t
IN -> u
RAISE -> v
RANGE -> w

PLUS -> +
MINUS -> -
DIVISION -> /
MULTIPLY -> *
GT -> >
LT -> <
EQ -> =
EXCLAMATION -> !
GTE -> GT EQ
LTE -> LT EQ
EQEQ -> EQ EQ
NOTEQ -> EXCLAMATION EQ
MOD -> %
AND -> &
OR -> #
NOT -> !
INC -> PLUS EQ
DEC -> MINUS EQ
